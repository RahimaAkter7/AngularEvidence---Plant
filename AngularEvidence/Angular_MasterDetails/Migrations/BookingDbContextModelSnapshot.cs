// <auto-generated />
using System;
using Angular_MasterDetails.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Angular_MasterDetails.Migrations
{
    [DbContext(typeof(PlantDbContext))]
    partial class BookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Angular_MasterDetails.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantId"), 1L, 1);

                    b.Property<bool>("IsStock")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockDate")
                        .HasColumnType("date");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Angular_MasterDetails.Models.Pot", b =>
                {
                    b.Property<int>("PotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PotId"), 1L, 1);

                    b.Property<string>("PotName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PotId");

                    b.ToTable("Pots");

                    b.HasData(
                        new
                        {
                            PotId = 1,
                            PotName = "Plastic Pot"
                        },
                        new
                        {
                            PotId = 2,
                            PotName = "Ceramic Pot"
                        },
                        new
                        {
                            PotId = 3,
                            PotName = "No Pot"
                        },
                        new
                        {
                            PotId = 4,
                            PotName = "Metal Pot"
                        },
                        new
                        {
                            PotId = 5,
                            PotName = "Hanging Pot"
                        });
                });

            modelBuilder.Entity("Angular_MasterDetails.Models.StockEntry", b =>
                {
                    b.Property<int>("StockEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockEntryId"), 1L, 1);

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<int>("PotId")
                        .HasColumnType("int");

                    b.HasKey("StockEntryId");

                    b.HasIndex("PlantId");

                    b.HasIndex("PotId");

                    b.ToTable("StockEntries");
                });

            modelBuilder.Entity("Angular_MasterDetails.Models.StockEntry", b =>
                {
                    b.HasOne("Angular_MasterDetails.Models.Plant", "Plant")
                        .WithMany("StockEntries")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Angular_MasterDetails.Models.Pot", "Pot")
                        .WithMany("StockEntries")
                        .HasForeignKey("PotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");

                    b.Navigation("Pot");
                });

            modelBuilder.Entity("Angular_MasterDetails.Models.Plant", b =>
                {
                    b.Navigation("StockEntries");
                });

            modelBuilder.Entity("Angular_MasterDetails.Models.Pot", b =>
                {
                    b.Navigation("StockEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
